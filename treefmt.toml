# One CLI to format the code tree - https://github.com/numtide/treefmt

# Do not exit with error if a configured formatter is missing
# Env $TREEFMT_ALLOW_MISSING_FORMATTER
# allow-missing-formatter = true

# The file into which a cpu profile will be written
# Env $TREEFMT_CPU_PROFILE
# cpu-profile = ./cpu.pprof

# Exclude files or directories matching the specified globs
# Env $TREEFMT_EXCLUDES
# excludes = ["*.md", "*.gif"]

# Exit with error if any changes were made during execution
# Useful for CI
# Env $TREEFMT_FAIL_ON_CHANGE
# fail-on-change = true

# A list of formatters to apply
# Defaults to all configured formatters
# Env $TREEFMT_FORMATTERS
# formatters = ["gofmt", "prettier"]

# Log paths that did not match any formatters at the specified log level
# Possible values are <debug|info|warn|error|fatal>
# Env $TREEFMT_ON_UNMATCHED
# on-unmatched = "info"

# The root directory from which treefmt will start walking the filesystem
# Defaults to the directory containing the config file
# Env $TREEFMT_TREE_ROOT
# tree-root = "/tmp/foo"

# File to search for to find the tree root (if tree-root is not set)
# Env $TREEFMT_TREE_ROOT_FILE
# tree-root-file = ".git/config"

# Set the verbosity of logs
# 0 = warn, 1 = info, 2 = debug
# Env $TREEFMT_VERBOSE
# verbose = 2

# The method used to traverse the files within the tree root
# Currently, we support 'auto', 'git' or 'filesystem'
# Env $TREEFMT_WALK
# walk = "filesystem"

[formatter.biome]
command = "biome"
excludes = []
includes = [
  "*.js",
  "*.ts",
  "*.mjs",
  "*.mts",
  "*.cjs",
  "*.cts",
  "*.jsx",
  "*.tsx",
  "*.d.ts",
  "*.d.cts",
  "*.d.mts",
  "*.json",
  "*.jsonc",
]
options = ["format", "--write", "--no-errors-on-unmatched"]

[formatter.clang-format]
command = "clang-format"
excludes = []
includes = [
  "*.c",
  "*.cc",
  "*.cpp",
  "*.h",
  "*.hh",
  "*.hpp",
  "*.glsl",
  "*.vert",
  ".tesc",
  ".tese",
  ".geom",
  ".frag",
  ".comp",
]
options = ["-i"]

[formatter.hclfmt]
command = "hclfmt"
excludes = []
includes = ["*.hcl"]
options = ["-w"]

[formatter.nixpkgs-fmt]
command = "nixpkgs-fmt"
excludes = []
includes = ["*.nix"]
options = []

[formatter.rubocop]
command = "rubocop"
excludes = []
includes = ["*.rb"]
options = []

[formatter.ruff-check]
command = "ruff"
excludes = []
includes = ["*.py", "*.pyi"]
options = ["check", "--fix"]

[formatter.ruff-format]
command = "ruff"
excludes = []
includes = ["*.py", "*.pyi"]
options = ["format"]

[formatter.shellcheck]
command = "shellcheck"
excludes = []
includes = ["*.sh", "*.bash", "*.envrc", "*.envrc.*"]
options = []

[formatter.shfmt]
command = "shfmt"
excludes = []
includes = ["*.sh", "*.bash", "*.envrc", "*.envrc.*"]
options = ["-s", "-w", "-i", "2"]

[formatter.terraform]
command = "terraform"
excludes = []
includes = ["*.tf", "*.tfvars", "*.tftest.hcl"]
options = ["fmt"]

[formatter.taplo]
command = "taplo"
excludes = []
includes = ["*.toml"]
options = ["format"]

[formatter.zig]
command = "zig"
excludes = []
includes = ["*.zig", "*.zon"]
options = ["fmt"]
